ms-vscode.vscode-node-azure-pack
donjayamanne.jquerysnippets
eamodio.gitlens
MS-vsliveshare.vsliveshare
ms-vscode.PowerShell
esbenp.prettier-vscode

ms-dotnettools.csharp
//////////.NET CORE//////////
-------------------------
primero descargar e instalar el sdk de .net core
https://dotnet.microsoft.com/en-us/download
-------------------------
dotnet
dotnet new 

//crear una carpeta
mkdir ejemplo1 
cd ejemplo1 

//generar el proyecto
dotnet new console

//ver archivos
ls
cat Program.cs
cat ejemplo1.csproj

//ejecutar
dotnet run

//compilar para generar ejecutable
dotnet build

//ejecutar dll, ir a la carpeta bin>debug>net6.0
dotnet ejemplo1.dll

//generar proyecto en carpeta especifica, si no existe, se genera automatico la carpeta
dotnet new console --output sample1
dotnet run --project sample1

//generar ejetuables para un sistema especifico
dotnet build -c Release -r win10-x64
//posibles S.O
win7-x64
win10-x64
osx.10.11-x64
ubuntu.16.04-x64

//abrir carpeta en vs code desde cmd
code .

//////////ASP.NET CORE////////////

//activar https
dotnet dev-certs https --trust

//crear app web vacia
dotnet new web -o HolaMundo
//crear app web mvc
dotnet new mvc -o HolaMundoMVC

//////Entity Framework en una solucion .NetCore/////////
dotnet add package Microsoft.EntityFrameworkCore.InMemory
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
con nuget escribir tools y buscar Microsoft.EntityFrameworkCore.Tools

tener modelos, tener dbContext

para entityframework
para generar archivos de migracion en el package manager console->add-migration FirstMigration
para usar la migracion y crear la base de datos->update database

//para entity framework core
EntityFrameworkCore\Add-Migration
EntityFrameworkCore\Update-Database

en caso de que el dbContext tenga datos precargados usar el comando sig. para generar los archivos de migracion->add-migration AddData
para ver los cambios reflejados de la migracion AddData ->update database
////////////////////Scaffolding//////////////////////////
dotnet tool install -g dotnet-aspnet-codegenerator
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
dotnet add package Microsoft.EntityFrameworkCore.Design

dotnet restore

//generar un controlador y sus vistas para un modelo
dotnet aspnet-codegenerator controller -name AlumnoController -m Alumno -dc EscuelaContext --relativeFolderPath Controllers --useDefaultLayout --referenceScriptLibraries -f

////////////Para login////////////////
dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore
dotnet add package Microsoft.AspNetCore.Identity.UI
//generar el login
dotnet-aspnet-codegenerator identity --dbContext AppDbContext --files "Account.Login;Account.Logout;Account.Register"

